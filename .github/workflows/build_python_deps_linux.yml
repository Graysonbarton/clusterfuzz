name: Build python deps on linux
on:
  push:
    branches: 
      - feature/ga-python-builds

jobs:
  build_wheels:
    name: ${{ matrix.libraries[1] }}-${{ matrix.wheel_combinations[0] }}-${{ matrix.wheel_combinations[1] }}-py${{ matrix.python_versions[0] }}
    runs-on: ${{ matrix.wheel_combinations[0] }}
    strategy:
      matrix:
        libraries: [

          ["https://files.pythonhosted.org/packages/8c/34/7dafc9052bd9b2b41c5a8912aeeca01e179d16de17e9c275633d4b807330/grpcio-1.38.0.tar.gz", "grpcio-1.38.0.tar.gz"],
          ["https://files.pythonhosted.org/packages/c4/b8/3512f0e93e0db23a71d82485ba256071ebef99b227351f0f5540f744af41/psutil-5.7.0.tar.gz", "psutil-5.7.0.tar.gz"],
          ["https://files.pythonhosted.org/packages/00/3a/7a53f54006933efd80dd908cd5b63d6c8b5006d60d1a6563dd90eb866de6/grpcio-tools-1.38.0.tar.gz", "grpcio-tools-1.38.0.tar.gz"],
          ["https://files.pythonhosted.org/packages/bf/10/ff66fea6d1788c458663a84d88787bae15d45daa16f6b3ef33322a51fc7e/MarkupSafe-2.0.1.tar.gz", "MarkupSafe-2.0.1.tar.gz"],
          
        ]
        python_versions: [
          ["3.7","cp37-*"],
          # ["3.8","cp38-*"],
          # ["3.9","cp39-*"],
          # ["3.10","cp310-*"],
          ["3.11","cp311-*"],
         # ["3.12","cp312-*"],
        ]
        wheel_combinations: [
          ["ubuntu-latest", "x86_64"],
          ["windows-2019", "AMD64"],
          ["macos13", "x86_64"],
     #     ["macos14", "x86_64"],
        ]
      fail-fast: false

    steps:
      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python_version: ${{ matrix.python_versions[0] }}

      - name: Install python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.17.0
        
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        if: matrix.wheel_combinations[0] == 'ubuntu-latest'

      - name: Setup linux
        if: matrix.wheel_combinations[0] == 'ubuntu-latest'
        run: |
          sudo apt-get install -y libffi-dev

      - name: Download and Untar File - Windows
        if: matrix.wheel_combinations[0] == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri ${{ matrix.libraries[0] }} -OutFile ${{ matrix.libraries[1] }}

      - name: Download and Untar File - Unix
        if: matrix.wheel_combinations[0] != 'windows-latest'
        run: |
          wget -O ${{ matrix.libraries[1] }} ${{ matrix.libraries[0] }}

      - name: Build wheels
        run: |
          python -m cibuildwheel ${{ matrix.libraries[1] }} --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_ARCHS: ${{ matrix.wheel_combinations[1] }}
          CIBW_BUILD: ${{ matrix.python_versions[1] }}
          CIBW_SKIP: '*-musllinux_*'


      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.libraries[1] }}-${{ matrix.wheel_combinations[0] }}-${{ matrix.wheel_combinations[1] }}-py${{ matrix.python_versions[0] }}
          path: ./wheelhouse/*.whl
          
